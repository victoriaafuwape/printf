.TH man 3 "21st September 2023" "0.01" "Custom _printf Documentation"
.SH NAME
.B _printf
- An original implementation of the printf function
.SH SYNOPSIS
To utilize this function, it is necessary to include the "holberton.h" header file.
.SH DESCRIPTION
The _printf() function is a custom implementation of the well-known printf function in C. It is designed to generate formatted output based on specific format instructions, as
outlined below. The output is directed to stdout, the standard output stream.
.SH FORMAT SPECIFIERS
The following format specifiers are supported by _printf:

.RS 3
%c: Print individual characters.
.RS 0
%s: Print strings.
.RS 0
%d: Print integers within the range of an int type.
.RS 0
%i: Print integers within the range of an int type.
.RS 0
%b: Print numbers in binary format.

.SH EXAMPLES
Here are some examples of how to use _printf:

.RS 3
.B _printf("%c", 'A');
.RS 0
This will print the character 'A'.

.RS 3
.B _printf("%s", "Hello, World!");
.RS 0
This will print the string "Hello, World!".

.SH RETURN VALUES
Upon execution, the _printf() function returns an integer representing the count of printed
characters, excluding the null-terminating '\\0' character within the string.
.SH SEE ALSO
.I printf(3)
.SH BUGS
No known bugs have been reported.

.SH SEE ALSO
For more information on formatting strings, refer to the documentation for the printf(3) function.

.SH NOTES
This implementation of _printf aims to be minimalistic and efficient while providing essential functionality. Users are encouraged to refer to the C standard library documentation for more advanced formatting options.

.SH VERSION
This document corresponds to _printf version 0.01.

.SH DATE
This documentation was last updated on 21st September 2023.
